<?xml version="1.0" encoding="UTF-8" ?>
<launch>
        <!-- overwriting these args -->
        <arg name="debug" default="false" />
        <arg name="gui" default="true" />
        <arg name="pause" default="false" />
        <arg name="world" default="$(find turtlebot_fieldpath)/world/arena.world" />

        <arg name="base"       value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
        <arg name="battery"    value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
        <arg name="stacks"     value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
        <arg name="3d_sensor"  value="asus_xtion_pro"/>  <!-- kinect, asus_xtion_pro -->


        <!-- include gazebo_ros launcher -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
                <arg name="world_name" value="$(arg world)" />
                <arg name="debug" value="$(arg debug)" />
                <arg name="gui" value="$(arg gui)" />
                <arg name="paused" value="$(arg pause)" />
                <arg name="use_sim_time" value="true" />
        </include>

        <include file="$(find turtlebot_fieldpath)/launch/includes/$(arg base).launch.xml">
                <arg name="base" value="$(arg base)"/>
                <arg name="stacks" value="$(arg stacks)"/>
                <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
        </include>

        <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
                <param name="output_frame" value="odom"/>
                <param name="freq" value="30.0"/>
                <param name="sensor_timeout" value="1.0"/>
                <param name="odom_used" value="true"/>
                <param name="imu_used" value="true"/>
                <param name="vo_used" value="true"/>
                <param name="debug" value="false"/>
                <param name="self_diagnose" value="false"/>
        </node>

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
                <param name="publish_frequency" type="double" value="30.0" />
        </node>

        <!-- Fake laser -->
        <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
        <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
                <param name="scan_height" value="10"/>
                <param name="output_frame_id" value="camera_depth_frame"/>
                <param name="range_min" value="0.45"/>
                <remap from="image" to="/camera/depth/image_raw"/>
                <remap from="scan" to="/scan"/>
        </node>

</launch>